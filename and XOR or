#!/bin/python3
#https://www.hackerrank.com/challenges/and-xor-or/problem
import math
import os
import random
import re
import sys

#
# Complete the 'andXorOr' function below.
#
# The function is expected to return an INTEGER.
# The function accepts INTEGER_ARRAY a as parameter.
#
class Stack:
    def __init__(self):
        self.items = []
        self.size = 0
    def push(self, elem):
        self.items.append(elem)
        self.size += 1
    def pop(self):
        self.size -= 1
        return self.items.pop()
    def peek(self):
        return self.items[-1]
    def isEmpty(self):
        return self.size == 0
def andXorOr(A):
    # Write your code here
    mx = A[0]^A[1]
    stack = Stack()
    for i in A:
        popped = True
        while not stack.isEmpty():
            top = stack.peek() 
            Si = i^top  
            if Si > mx:  # yield
                mx = Si
            if i < top:
                stack.pop()
            else:
                break
        stack.push(i)
    return mx

if __name__ == '__main__':
    fptr = open(os.environ['OUTPUT_PATH'], 'w')

    a_count = int(input().strip())

    a = list(map(int, input().rstrip().split()))

    result = andXorOr(a)

    fptr.write(str(result) + '\n')

    fptr.close()
